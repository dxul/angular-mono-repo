name: Release

on:
  push:
    branches:
      - master

jobs:
  release_npm:
    runs-on: ubuntu-latest
    name: Publish Package to NPM
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v2.1.4
        with:
          node-version: '12'
      - name: Install Packages
        run: |
         yarn bootstrap
#       - name: Build Package
#         run: npm run build
      - name: Create releases
        run: |
         npx lerna version -y -m "chore(release): publish" --changelog-preset angular --conventional-commits --create-release github
         env:
          GH_TOKEN: ${{ secrets.USER_GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          USER_GITHUB_TOKEN: ${{ secrets.USER_GITHUB_TOKEN }}
      - name: Prepare Package
        run: |
          npm config set //registry.npmjs.org/:_authToken ${{ secrets.NPM_TOKEN }}
      - name: Upload Package
        run: npx lerna publish from-package --yes
  release_github:
    runs-on: ubuntu-latest
    name: Publish Package to GITHUB
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v2.1.4
        with:
          node-version: '12'
      - name: Install Packages
        run: |
         yarn bootstrap
#       - name: Build Package
#         run: npm run build
      - name: Prepare Package
        run: |
          npm config set //npm.pkg.github.com/:_authToken ${{ secrets.GITHUB_TOKEN }}
      - name: Upload Package
        run: npx lerna publish from-package --registry https://npm.pkg.github.com/dxul --yes
          
#       - name: Prepare Package
#         run: |
#           npm config set //registry.npmjs.org/:_authToken ${{ secrets.NPM_TOKEN }}
#       - name: Upload Package
#         run: yarn publish:ci
#         env:
#          GH_TOKEN: ${{ secrets.USER_GITHUB_TOKEN }}
#          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
#          USER_GITHUB_TOKEN: ${{ secrets.USER_GITHUB_TOKEN }}
#         run: lerna publish from-package --yes
#       - name: Prepare Package
#         run: |
#           npm config set //npm.pkg.github.com/:_authToken ${{ secrets.GITHUB_TOKEN }}
#       - name: Upload Package
# #         run: yarn publish:ci
#         run: npx lerna publish from-package --registry https://npm.pkg.github.com/dxul --yes
          
#   release_npm:
#     runs-on: ubuntu-latest
#     name: Publish Package to NPM
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v2
#       - name: Setup Node
#         uses: actions/setup-node@v2.1.4
#         with:
#           node-version: '12'
# #       - name: Install Packages
# #         run: |
# #            yarn bootstrap
# #       - name: Build Package
# #         run: npm run build
#       - name: Prepare Package
#         run: |
#           npm config set //registry.npmjs.org/:_authToken ${{ secrets.NPM_TOKEN }}
#       - name: Upload Package
#         run: npx lerna publish from-git --yes
#   release_github:
#     runs-on: ubuntu-latest
#     name: Publish Package to GITHUB
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v2
#       - name: Setup Node
#         uses: actions/setup-node@v2.1.4
#         with:
#           node-version: '12'
# #       - name: Install Packages
# #         run: |
# #           yarn bootstrap
# #       - name: Build Package
# #         run: npm run build
#       - name: Prepare Package
#         run: |
#           npm config set //npm.pkg.github.com/:_authToken ${{ secrets.GITHUB_TOKEN }}
#       - name: Upload Package
#         run: npx lerna publish from-git --registry https://npm.pkg.github.com/dxul --yes
